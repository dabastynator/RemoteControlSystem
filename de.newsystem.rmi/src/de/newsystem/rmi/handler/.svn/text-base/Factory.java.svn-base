package de.newsystem.rmi.client;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Proxy;
import java.net.Socket;
import java.net.UnknownHostException;

public class Factory {
	
	private static Factory INSTANCE;

	public static Factory instance(){
		if (INSTANCE == null)
			INSTANCE = new Factory();
		return INSTANCE;
	}

	private ObjectOutputStream out;
	private ObjectInputStream in;
	private Socket socket;
	
	public void init(String host, int port){
		try {
			socket = new Socket(host,port);
			out = new ObjectOutputStream(socket.getOutputStream());
			in = new ObjectInputStream(socket.getInputStream());
		} catch (UnknownHostException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public Object createProxy(String objectName, Class template){
		DynamicProxy p;
		p = new DynamicProxy(objectName, in, out);
		Object object = Proxy.newProxyInstance(p.getClass().getClassLoader(), new Class[]{template}, p);
		return object;
	}

	public void close() {
		try {
			socket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
}
